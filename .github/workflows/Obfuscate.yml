name: Build Obfuscate BPB Panel

permissions:
  contents: write

on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 */3 * * *'

jobs:
  build:
    if: |
      github.event_name == 'workflow_dispatch' || 
      github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Get release version
        id: get_version
        run: echo "RELEASE_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Check release version
        run: echo "Release version is $RELEASE_VERSION"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Install dependencies
        run: |
            npm install
            sudo apt-get update
            sudo apt-get install -y jq

      - name: Fetch and download latest worker.js from release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_INFO=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases/latest)
          RELEASE_TAG=$(echo "$RELEASE_INFO" | jq -r '.tag_name')
          echo "Latest Release: $RELEASE_TAG"
          DOWNLOAD_URL=$(echo "$RELEASE_INFO" | jq -r '.assets[] | select(.name == "worker.js") | .browser_download_url')
          if [ -z "$DOWNLOAD_URL" ]; then
            echo "Error: Could not find worker.js in latest release"
            exit 1
          fi
          echo "Downloading from: $DOWNLOAD_URL"
          wget -O origin.js "$DOWNLOAD_URL"
          ls -l origin.js
          head -n 10 origin.js
          echo "Downloading from: $DOWNLOAD_URL"
          wget -O RELEASE.md "https://raw.githubusercontent.com/bia-pain-bache/BPB-Worker-Panel/refs/heads/main/RELEASE.md"
          ls -l RELEASE.md
          head -n 10 RELEASE.md

      - name: Build project
        run: npm run build
        
      - name: Read release note
        id: read_release
        shell: bash
        run: |
          r=$(cat RELEASE.md)         
          r="${r//'%'/'%25'}"                               
          r="${r//$'\n'/'%0A'}"                             
          r="${r//$'\r'/'%0D'}"                             
          echo "RELEASE_BODY=$r" >> $GITHUB_OUTPUT 
          cp -f dist/_worker.js _worker.js 
          cp -f dist/* output/

      - name: Upload Release Assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          tag: v${{ env.RELEASE_VERSION }}
          release_name: Release v${{ env.RELEASE_VERSION }}
          overwrite: true
          file_glob: true
          prelease: false
          body: ${{ steps.read_release.outputs.RELEASE_BODY }}
